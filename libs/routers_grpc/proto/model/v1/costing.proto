syntax = "proto3";
package model.v1;

message CostOptions {
  // The vehicle costing method to use for map matching.
  model.v1.Costing costing_method = 1;

  // The optimised solver to be used for map matching.
  model.v1.OptimiseFor optimise_for = 2;
}

// Allow the service to optimise based on the requested parameters.
enum OptimiseFor {
  OPTIMISE_FOR_UNSPECIFIED = 0;
  OPTIMISE_FOR_SPEED = 1;
  OPTIMISE_FOR_PARALLELISM = 2;
  OPTIMISE_FOR_CONSISTENCY = 3;
}

message Costing {
  message CarModel {
    float height = 1;
    float width = 2;
  }

  message TruckModel {
    float height = 1;
    float width = 2;
    float length = 3;

    float axle_load = 4;
    uint32 axle_count = 5;

    bool hazardous_load = 6;
  }

  message BusModel {
    float height = 1;
    float width = 2;
  }

  oneof variation {
    CarModel car = 1;
    BusModel bus = 2;
    TruckModel truck = 3;
  }
}
